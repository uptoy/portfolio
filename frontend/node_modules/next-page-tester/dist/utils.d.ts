/// <reference types="node" />
import { URL } from 'url';
import querystring from 'querystring';
import type { PageObject } from './commonTypes';
export declare function parseRoute({ route, }: {
    route: string;
}): {
    urlObject: URL;
    detectedLocale: string | undefined;
};
export declare function parseQueryString({ queryString, }: {
    queryString: string;
}): querystring.ParsedUrlQuery;
export declare function stringifyQueryString({ object, leadingQuestionMark, }: {
    object: Parameters<typeof querystring['stringify']>[0];
    leadingQuestionMark?: boolean;
}): string;
export declare function removeFileExtension({ path }: {
    path: string;
}): string;
export declare const defaultNextRoot: string;
export declare function findPagesDirectory({ nextRoot }: {
    nextRoot: string;
}): string;
export declare function getPageExtensions(): string[];
export declare function useMountedState(): () => boolean;
export declare function preservePredefinedSharedModulesIdentity(): void;
export declare function executeWithFreshModules<T>(f: () => T, { sharedModules }: {
    sharedModules: string[];
}): T;
export declare function parseHTML(html: string): Document;
export declare function isExternalRoute(route: string): boolean;
/**
 * Get locale information for a given route
 */
export declare function getLocales({ pageObject: { detectedLocale }, }: {
    pageObject: PageObject;
}): {
    locales: string[] | undefined;
    defaultLocale: string | undefined;
    locale: string | undefined;
};
/**
 * Returns the absolute file paths matching a given glob pattern
 * It normalizes both incoming and outcoming paths
 */
export declare function glob(pattern: string): Promise<string[]>;
/**
 * Set next/image configuration as implemented in:
 * https://github.com/vercel/next.js/blob/v11.1.0/packages/next/client/image.tsx#L107
 */
export declare function setNextImageConfiguration(): void;
